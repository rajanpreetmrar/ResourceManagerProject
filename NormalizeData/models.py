from django.db import models


class RawData(models.Model):
    RecordNumber = models.IntegerField()
    CCN = models.IntegerField()
    HospitalName = models.CharField(max_length=255)
    Address = models.CharField(max_length=255)
    City = models.CharField(max_length=255)
    StateCode = models.CharField(max_length=2)
    ZipCode = models.CharField(max_length=10)
    County = models.CharField(max_length=255)
    CBSANumber = models.IntegerField()
    RuralUrban = models.CharField(max_length=1)
    FacilityType = models.CharField(max_length=10)
    ProviderType = models.IntegerField()
    ControlType = models.IntegerField()
    FiscalYearBegin = models.DateField()
    FiscalYearEnd = models.DateField()
    FTEEmployees = models.FloatField()
    InternsResidents = models.FloatField()
    TotalDaysTitleV = models.IntegerField()
    TotalDaysTitleXVIII = models.IntegerField()
    TotalDaysTitleXIX = models.IntegerField()
    TotalDaysTotal = models.IntegerField()
    Beds = models.IntegerField()
    BedDaysAvailable = models.IntegerField()
    DischargesTitleV = models.IntegerField()
    DischargesTitleXVIII = models.IntegerField()
    DischargesTitleXIX = models.IntegerField()
    DischargesTotal = models.IntegerField()
    DaysTitleVTotal = models.IntegerField()
    DaysTitleXVIIITotal = models.IntegerField()
    DaysTitleXIXTotal = models.IntegerField()
    DaysTotalTotal = models.IntegerField()
    BedsTotal = models.IntegerField()
    BedDaysAvailableTotal = models.IntegerField()
    DischargesTitleVTotal = models.IntegerField()
    DischargesTitleXVIIITotal = models.IntegerField()
    DischargesTitleXIXTotal = models.IntegerField()
    DischargesTotalTotal = models.IntegerField()
    DaysTitleVAdultsPeds = models.IntegerField()
    DaysTitleXVIIIAdultsPeds = models.IntegerField()
    DaysTitleXIXAdultsPeds = models.IntegerField()
    DaysTotalAdultsPeds = models.IntegerField()
    BedsAdultsPeds = models.IntegerField()
    BedDaysAvailableAdultsPeds = models.IntegerField()
    DischargesTitleVAdultsPeds = models.IntegerField()
    DischargesTitleXVIIIAdultsPeds = models.IntegerField()
    DischargesTitleXIXAdultsPeds = models.IntegerField()
    DischargesTotalAdultsPeds = models.IntegerField()
    CharityCost = models.FloatField()
    BadDebtExpense = models.FloatField()
    UncompensatedCost = models.FloatField()
    UnreimbursedUncompensatedCost = models.FloatField()
    SalariesFromWorksheetA = models.FloatField()
    OverheadCost = models.FloatField()
    DepreciationCost = models.FloatField()
    TotalCost = models.FloatField()
    InpatientCharges = models.FloatField()
    OutpatientCharges = models.FloatField()
    CombinedCharges = models.FloatField()
    WageRelatedCostsCore = models.FloatField()
    WageRelatedCostsRHC = models.FloatField()
    SalariesAdjusted = models.FloatField()
    ContractLabor = models.FloatField()
    WageRelatedCostsTeaching = models.FloatField()
    WageRelatedCostsInternsResidents = models.FloatField()
    Cash = models.FloatField()
    TemporaryInvestments = models.FloatField()
    NotesReceivable = models.FloatField()
    AccountsReceivable = models.FloatField()
    UncollectibleAccounts = models.FloatField()
    Inventory = models.FloatField()
    PrepaidExpenses = models.FloatField()
    OtherCurrentAssets = models.FloatField()
    CurrentAssets = models.FloatField()
    Land = models.FloatField()
    LandImprovements = models.FloatField()
    Buildings = models.FloatField()
    LeaseholdImprovements = models.FloatField()
    FixedEquipment = models.FloatField()
    MovableEquipment = models.FloatField()
    DepreciableEquipment = models.FloatField()
    HITAssets = models.FloatField()
    FixedAssets = models.FloatField()
    Investments = models.FloatField()
    OtherAssets = models.FloatField()
    TotalOtherAssets = models.FloatField()
    TotalAssets = models.FloatField()
    AccountsPayable = models.FloatField()
    SalariesPayable = models.FloatField()
    PayrollTaxes = models.FloatField()
    ShortTermLoans = models.FloatField()
    DeferredIncome = models.FloatField()
    OtherLiabilities = models.FloatField()
    CurrentLiabilities = models.FloatField()
    Mortgage = models.FloatField()
    LongTermNotes = models.FloatField()
    UnsecuredLoans = models.FloatField()
    OtherLongTermLiabilities = models.FloatField()
    LongTermLiabilities = models.FloatField()
    TotalLiabilities = models.FloatField()
    FundBalance = models.FloatField()
    TotalFundBalances = models.FloatField()
    LiabilitiesFundBalances = models.FloatField()
    DRGNonOutliers = models.FloatField()
    DRGBeforeOct = models.FloatField()
    DRGAfterOct = models.FloatField()
    OutlierPayments = models.FloatField()
    DisproportionateShare = models.FloatField()
    AllowableDSHPercentage = models.FloatField()
    ManagedCarePayments = models.FloatField()
    IMEPayment = models.FloatField()
    InpatientRevenue = models.FloatField()
    OutpatientRevenue = models.FloatField()
    GrossRevenue = models.FloatField()
    ContractualAllowances = models.FloatField()
    NetPatientRevenue = models.FloatField()
    OperatingExpenses = models.FloatField()
    ServiceIncome = models.FloatField()
    OtherIncome = models.FloatField()
    TotalIncome = models.FloatField()
    OtherExpenses = models.FloatField()
    NetIncome = models.FloatField()
    CostToChargeRatio = models.FloatField()
    MedicaidRevenue = models.FloatField()
    MedicaidCharges = models.FloatField()
    SCHIPRevenue = models.FloatField()
    SCHIPCharges = models.FloatField()

    def __str__(self):
        return f"{self.RecordNumber} - {self.HospitalName}"


class Hospitals(models.Model):
    # Primary Key
    report_record = models.AutoField(primary_key=True)

    # Fields from RawData
    provider_ccn = models.CharField(max_length=10, unique=True)
    hospital_name = models.CharField(max_length=255)
    street_address = models.CharField(max_length=255)
    city = models.CharField(max_length=255)
    state_code = models.CharField(max_length=2)
    zip_code = models.CharField(max_length=10)
    county = models.CharField(max_length=255)
    medicare_cbsa_number = models.CharField(max_length=10)
    rural_versus_urban = models.CharField(max_length=50)
    ccn_facility_type = models.CharField(max_length=255)
    provider_type = models.CharField(max_length=255)
    type_of_control = models.CharField(max_length=255)
    fiscal_year_begin_date = models.DateField()
    fiscal_year_end_date = models.DateField()

    def __str__(self):
        return self.hospital_name

    class Meta:
        verbose_name_plural = "Hospitals"


class HospitalExpenses(models.Model):
    HospitalID = models.OneToOneField(Hospitals, on_delete=models.CASCADE, primary_key=True)
    HospitalName = models.CharField(max_length=250)
    CharityCareCost = models.IntegerField()
    BadDebtExpense = models.IntegerField()
    UncompasatedCaseCost = models.IntegerField()
    TotalCost = models.IntegerField()
    WageRelatedCostsCore = models.IntegerField()
    WageRelatedCostsRHC_FQHC = models.IntegerField()
    TotalSalaries = models.IntegerField()
    ContractLabor = models.IntegerField()
    WageCostsTeachingPhysicians = models.IntegerField()
    WageCostInternAndResidents = models.IntegerField()
    DepreciationCost = models.IntegerField()

    def __str__(self):
        return self.HospitalName

    class Meta:
        verbose_name_plural = "HospitalExpenses"

class FacultyData(models.Model):
    FTEEmployees = models.FloatField()
    InternsResidents = models.FloatField()
    ContractLabor = models.FloatField()()

    def __str__(self):
        return f"{self.facultydata} - {self.HospitalName}"
